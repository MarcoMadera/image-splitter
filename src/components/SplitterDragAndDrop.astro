---
import { Icon } from "astro-icon/components";
---

<div class="flex flex-col">
  <div class="space-y-16 text-center">
    <div class="relative z-10 min-h-96">
      <div class="flex flex-col items-center justify-center min-h-96">
        <div
          class="min-h-[40rem] max-h-[40rem] flex flex-col items-center justify-center w-full"
        >
          <div
            id="imageDropContainer"
            class="btn-plain flex flex-col items-center justify-center min-h-[40rem] max-h-[40rem] h-[40rem] w-full border-2 border-dashed border-[var(--btn-regular-bg-hover)] rounded-lg focus:outline-none focus:border-[var(--hover-btn-bg-active)]"
            tabindex="0"
          >
            <label
              for="imageInput"
              class="flex flex-col items-center justify-center w-full h-full space-y-4 cursor-pointer"
            >
              <Icon name="fa6-solid:plus" size={34} />
              <p>Browse or drag and drop images here</p>
            </label>
            <input
              id="imageInput"
              type="file"
              accept="image/*"
              multiple
              class="hidden"
            />
          </div>
          <div
            id="imageContainer"
            class="flex hidden flex-col items-center justify-center min-h-[40rem] max-h-[40rem] w-full"
          >
          </div>
        </div>
        <button
          type="button"
          id="clear-image-btn"
          class="btn-regular invisible mt-1 tabbable px-2 py-1 cursor-pointer inline-flex items-center justify-center rounded-lg transition-[transform,background-color] duration-100 active:scale-105 disabled:!cursor-not-allowed disabled:bg-opacity-60 disabled:text-opacity-60"
          >Clear image</button
        >
      </div>
    </div>
  </div>

  <script>
    import { onSwup } from "utils";

    onSwup("content:replace", () => {
      const imageDropContainer = document.getElementById(
        "imageDropContainer"
      ) as HTMLDivElement;

      imageDropContainer.addEventListener("dragover", (e) => {
        e.preventDefault();
        imageDropContainer.style.backgroundColor = "var(--btn-plain-bg-hover)";

        imageDropContainer.classList.add("!text-[var(--primary)]");
        imageDropContainer.classList.add("!border-[var(--primary)]");
      });

      imageDropContainer.addEventListener("dragleave", (e) => {
        e.preventDefault();
        imageDropContainer.style.backgroundColor = "";

        imageDropContainer.classList.remove("!text-[var(--primary)]");
        imageDropContainer.classList.remove("!border-[var(--primary)]");
      });

      imageDropContainer.addEventListener("drop", (e) => {
        e.preventDefault();
        imageDropContainer.style.backgroundColor = "";

        imageDropContainer.classList.remove("!text-[var(--primary)]");
        imageDropContainer.classList.remove("!border-[var(--primary)]");
      });

      imageDropContainer.addEventListener("keydown", (e) => {
        if (e.key === "Enter" || e.key === " ") {
          const imageInput = document.getElementById(
            "imageInput"
          ) as HTMLInputElement;
          imageInput.click();
        }
      });
    });
  </script>
</div>
